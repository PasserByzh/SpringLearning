<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
    简单类型：Spring中规定java的基本数据类型和String都是简单类型

    di：给属性赋值
    1. set注入（设值注入）：Spring调用类的set方法，你可以在set方法中完成属性赋值
        1）简单类型的set注入
            <bean id="xx" class="yyy">
                <property name="属性名字" value="此属性的值">
                    一个property只能给一个属性赋值
                </property>
            </bean>
         2) 引用类型的注入：Spring调用类的set方法
         <bean id="xx" class="yyy">
                <property name="属性名字" ref="bean的id(对象的名称)">
                </property>
            </bean>
    2. 构造注入： spring调用类有参数构造方法，在创建对象的同时，在构造方法中给属性赋值
       构造注入使用 <constructor-arg>标签： 一个<constructor-arg>表示构造方法一个参数
       <constructor-arg> 标签属性：
            name：表示构造方法的形参名
            index：表示构造方法的参数的位置，参数从左向右是0,1,2的顺序
            ref：构造方法的形参类型是应用类型的，使用ref
        </constructor-arg>
    -->
    <!--使用name属性-->
    <bean id="Student" class="org.example.demo03.Student">
       <constructor-arg name="name" value="PasserBy"/>
        <constructor-arg name="age" value="10"/>
        <constructor-arg name="school" ref="mySchool"/>
    </bean>

    <!--index 属性-->
    <bean id="Student1" class="org.example.demo03.Student">
        <constructor-arg index="0" value="PasserBy"/>
        <constructor-arg index="1" value="10"/>
        <constructor-arg index="2" ref="mySchool"/>
    </bean>

    <!--省略index-->
    <bean id="Student2" class="org.example.demo03.Student">
        <constructor-arg value="PasserBy"/>
        <constructor-arg value="10"/>
        <constructor-arg ref="mySchool"/>
    </bean>

    <bean id="mySchool" class="org.example.demo03.School">
        <property name="name" value="Peking Universicity"/>
        <property name="address" value="Beijing"/>
    </bean>




</beans>