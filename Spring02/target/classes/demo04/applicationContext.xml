<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
    简单类型：Spring中规定java的基本数据类型和String都是简单类型

    di：给属性赋值
    1. set注入（设值注入）：Spring调用类的set方法，你可以在set方法中完成属性赋值
        1）简单类型的set注入
            <bean id="xx" class="yyy">
                <property name="属性名字" value="此属性的值">
                    一个property只能给一个属性赋值
                </property>
            </bean>
         2) 引用类型的注入：Spring调用类的set方法
         <bean id="xx" class="yyy">
                <property name="属性名字" ref="bean的id(对象的名称)">
                </property>
            </bean>
    2. 构造注入： spring调用类有参数构造方法，在创建对象的同时，在构造方法中给属性赋值
       构造注入使用 <constructor-arg>标签： 一个<constructor-arg>表示构造方法一个参数
       <constructor-arg> 标签属性：
            name：表示构造方法的形参名
            index：表示构造方法的参数的位置，参数从左向右是0,1,2的顺序
            ref：构造方法的形参类型是应用类型的，使用ref
        </constructor-arg>
    -->

    <!--
    引用类型的自动注入：Spring框架根据某些规则可以给应用类型赋值。不用你再给引用类型赋值了
    使用规则常用的是byName,byType
    1. byName（按名称注入）：java类中引用类型的属性名和Spring容器中（配置文件）<bean> 的id名称一样
        且数据类型是一致的，这样的容器中的bean，spring 能够赋值给引用类型
        语法：
        <bean id="xxx" class="yyy" autowire="byName">
            简单类型属性赋值
        </bean>
    2. byType（按类型注入）：java类中引用类型的数据类型和spring容器中（配置文件）<bean>的class属性是同源关系的，这样的bean能够赋值给引用类型
            同源就是一类的意思：
                ① java类中引用类型的数据类型和bean的class的值是一样的
                ② java类中引用类型的数据类型和bean的class的值是父子关系的
                ③ java类中引用类型的数据类型和bean的class的值是接口和实现类关系的
           语法：
        <bean id="xxx" class="yyy" autowire="byType">
            简单类型属性赋值
        </bean>
    -->

    <bean id="Student" class="org.example.demo04.Student" autowire="byName">
       <property name="name" value="PasserBy"/>
        <property name="age" value="10"/>
        <!--引用类型赋值-->
        <property name="school" ref="school"/>
    </bean>


    <bean id="Student1" class="org.example.demo04.Student" autowire="byType">
        <property name="name" value="PasserBy"/>
        <property name="age" value="1000"/>
        <!--引用类型赋值-->
        <property name="school" ref="school"/>
    </bean>




    <bean id="school" class="org.example.demo04.School">
        <property name="name" value="清华大学"/>
        <property name="address" value="Beijing"/>
    </bean>




</beans>